                        ; aallocate_asm

                        ; This file is part of Sfera, a library for SuperForth
                        ; http://programandala.net/en.program.sfera.html

                        ; Author: Marcos Cruz (programandala.net), 2016.

                        ; ==============================================================
                        ; License

                        ; You may do whatever you want with this work, so long as you
                        ; retain the copyright/authorship/acknowledgment/credit
                        ; notice(s) and this license in all redistributed copies and
                        ; derived works.  There is no warranty.

                        ; ==============================================================
                        ; Credit

                        ; Based on code from:

                        ; SystemKit/KnightKit QL Utility toolkit, by Mark Knight.
                        ; Written 1994, 1995. Public domain.
                        ; http://www.dilwyn.me.uk/tk/index.html

                        ; ==============================================================
                        ; History

                        ; 2016-01-22: Start.
                        ;
                        ; 2016-01-23: Fixed: the SuperForth registers were saved before
                        ; removing the parameters from the stack, what caused they were
                        ; returned back. Simplified: no zone marker is saved or checked
                        ; anymore. Simplified after standard Forth: `aallocate` always
                        ; returns the address, even when the operation fails; this makes
                        ; the code simpler and shorter.  Documented the words after
                        ; Forth-2012.

                        ; ==============================================================

000000                    include 'inc_macros_asm'
                          list off
                          list nosym
                          list notemp
                          list on

000000                    end
000000                    include 'inc_labels_asm'
                          list off
                          list on
000000                    end

000000                    code 'aallocate',aallocate_end  ; ( d -- da ior )

                          ; Allocate _d_ bytes of contiguous data space from the common
                          ; heap. If the allocation succeeds, _da_ is the aligned
                          ; absolute address of the allocated space and _ior_ is zero.
                          ; If the operation fails, _da_ does not represent a valid
                          ; address and _ior_ is an OS error code.
                          ;
                          ; `aallocate` stands for "absolute allocate", and is a
                          ; SuperForth-specific version of standard Forth's `allocate`,
                          ; named after other SuperForth words that access absolute
                          ; addresses of the system.

00000E                    pop_l       d1
00001E 48E7 20F0          movem.l     a0-a3/d2,-(sp)  ; save the SuperForth registers

000022 243C FFFFFFFF      move.l      #-1,d2          ; this job will own the memory
000028 7018               moveq       #mt_alchp,d0    ; select mt.alchp, grab some heap memory
00002A 4E41               trap        #1              ; call it to reserve the memory

00002C 2208               move.l      a0,d1
00002E 4CDF 0F04          movem.l     (sp)+,a0-a3/d2  ; restore the SuperForth registers
000032                    push_l      d1              ; push the address
00003A                    push_w      d0              ; push ior

00003E                    next

       = 000048         aallocate_end equ *

000048                    code 'afree',afree_end  ; ( da -- ior )

                          ; Return the contiguous region of data space indicated by _da_
                          ; to the system for later allocation.  _da_ shall indicate a
                          ; region of data space that was previously obtained by
                          ; `aallocate`.
                          ;
                          ; If the operation succeeds, _ior_ is zero.  If the operation
                          ; fails, _ior_ is an OS error code.
                          ;
                          ; `afree` stands for "absolute free", and is a
                          ; SuperForth-specific version of standard Forth's `free`,
                          ; named after other SuperForth words that access absolute
                          ; addresses of the system.

000052                    pop_l       d1
000062 48E7 20F0          movem.l a0-a3/d2,-(sp)      ; save the SuperForth registers
000066 2041               move.l      d1,a0
000068 7019               moveq       #mt_rechp,d0    ; select mt.rechp, return the memory
00006A 4E41               trap        #1              ; call the system routine to return it
00006C 7000               moveq       #0,d0           ; ior = no error
00006E 4CDF 0F04          movem.l (sp)+,a0-a3/d2      ; restore the SuperForth registers
000072                    push_w      d0              ; push ior
000076                    next

       = 000080         afree_end equ *

000080                    end_code_definitions

000082                    end

00000 Total Error(s)

