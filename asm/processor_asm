; processor_asm

; This file is part of Sfera, a library for SuperForth
; http://programandala.net/en.program.sfera.html

; Author: Marcos Cruz (programandala.net), 2016.

; ==============================================================
; License

; You may do whatever you want with this work, so long as you
; retain the copyright/authorship/acknowledgment/credit
; notice(s) and this license in all redistributed copies and
; derived works.  There is no warranty.

; ==============================================================
; Credit

; Based on code from Display Extensions V2.01 (last update
; 2003-02-21), written by Dilwyn Jones, <http://dilwyn.me.uk>.
;
; The information was retrieved from the document "Which machine
; am I running on?", written by Dilwyn Jones and Marcel Kilgus.

; ==============================================================
; Description

; `processor` returns the identifier of the processor:
;
; The top 4 bits (high nibble, or bits 4-7) identify the
; processor type:

; HEX      DECIMAL   PROCESSOR TYPE
; 00+      00+       68000 or 68008
; 10+      16+       68010
; 20+      32+       68020
; 30+      48+       68030
; 40+      64+       68040
; 60+      96+       68060

; The bottom 4 bits (lower nibble, or bits 0-3) contains
; information about any floating point unit available. It takes
; the form:

; HEX      DECIMAL   FPU DETAILS
; 0        0         No FPU available
; 1        1         Internal MMU
; 2        2         68851 MMU
; 4        4         internal FPU
; 8        8         68881 or 68882 FPU

; ==============================================================
; History

; 2016-01-17: Written.

; ==============================================================

  include 'inc_macros_asm'
  include 'inc_labels_asm'

  code 'PROCESSOR',processor_end  ; ( -- n )

  move.l  a0,-(sp)         ; save SuperForth's a0
  moveq.l #mt_inf,d0
  trap    #1               ; call mt.inf
  ; a0 = addresss of system variables
  move.b  sys_ptyp(a0),d0
  push_n  d0               ; to the Forth stack
  move.l  (sp)+,a0         ; restore SuperForth's a0
  next

processor_end equ *

  end_code_definitions

  end
