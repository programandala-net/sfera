; inc_labels_asm

; This file is part of Sfera, a library for SuperForth
; http://programandala.net/en.program.sfera.html

; Compiled by: Marcos Cruz (programandala.net), 2016

; Last update: 201601151726

; ==============================================================
; License

; You may do whatever you want with this work, so long as you
; retain all the copyright/authorship/acknowledgment/credit
; notice(s) and this license in all redistributed copies and
; derived works.  There is no warranty.

; ==============================================================
; Description

; Keys for QDOS and SMSQ/E.

; ==============================================================
; Acknowledgment

; This file was created with files and information from:

; GWASL assembler (by George Wilt, 2008)
; QL Advanced User Guide (by Adrian Dickens, 1984)
; SMSQ/E sources (by Tonny Tebby et al.)

; ==============================================================
; History

; 2016-01-11: Added to the library.
; 2016-01-14: Reorganized. Titles.

; ==============================================================
; Traps

; ----------------------------------------------
; Manager traps (trap #1)

mt_inf        equ   $00000000
mt_cjob       equ   $00000001
mt_jinf       equ   $00000002
mt_rjob       equ   $00000004
mt_frjob      equ   $00000005
mt_free       equ   $00000006
mt_trapv      equ   $00000007
mt_susjb      equ   $00000008
mt_reljb      equ   $00000009
mt_activ      equ   $0000000a
mt_prior      equ   $0000000b
mt_alloc      equ   $0000000c
mt_lnkfr      equ   $0000000d
mt_alres      equ   $0000000e
mt_reres      equ   $0000000f
mt_dmode      equ   $00000010
mt_ipcom      equ   $00000011
mt_baud       equ   $00000012
mt_rclck      equ   $00000013
mt_sclck      equ   $00000014
mt_aclck      equ   $00000015
mt_albas      equ   $00000016
mt_rebas      equ   $00000017
mt_alchp      equ   $00000018
mt_rechp      equ   $00000019
mt_lxint      equ   $0000001a
mt_rxint      equ   $0000001b
mt_lpoll      equ   $0000001c
mt_rpoll      equ   $0000001d
mt_lschd      equ   $0000001e
mt_rschd      equ   $0000001f
mt_liod       equ   $00000020
mt_riod       equ   $00000021
mt_ldd        equ   $00000022
mt_rdd        equ   $00000023

; ----------------------------------------------
; IO allocation traps (trap #2)

io_open       equ   $00000001
io_close      equ   $00000002
io_formt      equ   $00000003
io_delet      equ   $00000004

; ----------------------------------------------
; Serial IO calls (trap #3)

io_pend       equ   $00000000
io_fbyte      equ   $00000001
io_fline      equ   $00000002
io_fstrg      equ   $00000003
io_edlin      equ   $00000004
io_sbyte      equ   $00000005
io_sstrg      equ   $00000007

; ----------------------------------------------
; Screen output calls (trap #3)

sd_extop      equ   $00000009
sd_pxenq      equ   $0000000a
sd_chenq      equ   $0000000b
sd_bordr      equ   $0000000c
sd_wdef       equ   $0000000d
sd_cure       equ   $0000000e
sd_curs       equ   $0000000f
sd_pos        equ   $00000010
sd_tab        equ   $00000011
sd_nl         equ   $00000012
sd_pcol       equ   $00000013
sd_ncol       equ   $00000014
sd_prow       equ   $00000015
sd_nrow       equ   $00000016
sd_pixp       equ   $00000017
sd_scrol      equ   $00000018
sd_scrtp      equ   $00000019
sd_scrbt      equ   $0000001a
sd_pan        equ   $0000001b
sd_panln      equ   $0000001e
sd_panrt      equ   $0000001f
sd_clear      equ   $00000020
sd_clrtp      equ   $00000021
sd_clrbt      equ   $00000022
sd_clrln      equ   $00000023
sd_clrrt      equ   $00000024
sd_font       equ   $00000025
sd_recol      equ   $00000026
sd_setpa      equ   $00000027
sd_setst      equ   $00000028
sd_setin      equ   $00000029
sd_setfl      equ   $0000002a
sd_setul      equ   $0000002b
sd_setmd      equ   $0000002c
sd_setsz      equ   $0000002d
sd_fill       equ   $0000002e
sd_point      equ   $00000030
sd_line       equ   $00000031
sd_arc        equ   $00000032
sd_elips      equ   $00000033
sd_scale      equ   $00000034
sd_flood      equ   $00000035
sd_gcur       equ   $00000036

; ----------------------------------------------
; Filing system traps (trap #3)

fs_check      equ   $00000040
fs_flush      equ   $00000041
fs_posab      equ   $00000042
fs_posre      equ   $00000043
fs_mdinf      equ   $00000045
fs_heads      equ   $00000046
fs_headr      equ   $00000047
fs_load       equ   $00000048
fs_save       equ   $00000049

; ==============================================================
; vectored utilities

; ----------------------------------------------
; Supervisor mode routines

mm_alchp      equ   $000000c0
mm_rechp      equ   $000000c2

io_serq       equ   $000000e8
io_serio      equ   $000000ea

; ----------------------------------------------
; Simplified trap routines

ut_windw      equ   $000000c4
ut_con        equ   $000000c6
ut_scr        equ   $000000c8
ut_err0       equ   $000000ca
ut_err        equ   $000000cc
ut_mint       equ   $000000ce
ut_mtext      equ   $000000d0

; ----------------------------------------------
; General utility routines

ut_link       equ   $000000d2
ut_unlnk      equ   $000000d4
mm_alloc      equ   $000000d8
mm_lnkfr      equ   $000000da
io_qset       equ   $000000dc
io_qtest      equ   $000000de
io_qin        equ   $000000e0
io_qout       equ   $000000e2
io_qeof       equ   $000000e4
io_name       equ   $00000122

; ----------------------------------------------
; Basic utility routines

ut_cstr       equ   $000000e6
cn_date       equ   $000000ec
cn_day        equ   $000000ee
cn_ftod       equ   $000000f0
cn_itod       equ   $000000f2
cn_itobb      equ   $000000f4
cn_itobw      equ   $000000f6
cn_itobl      equ   $000000f8
cn_itohb      equ   $000000fa
cn_itohw      equ   $000000fc
cn_itohl      equ   $000000fe
cn_dtof       equ   $00000100
cn_dtoi       equ   $00000102
cn_btoib      equ   $00000104
cn_btoiw      equ   $00000106
cn_btoil      equ   $00000108
cn_htoib      equ   $0000010a
cn_htoiw      equ   $0000010c
cn_htoil      equ   $0000010e
bp_init       equ   $00000110
ca_gtint      equ   $00000112
ca_gtfp       equ   $00000114
ca_gtstr      equ   $00000116
ca_gtlin      equ   $00000118
bv_chrix      equ   $0000011a
ri_exec       equ   $0000011c
ri_execb      equ   $0000011e
bp_let        equ   $00000120

; ----------------------------------------------
; Microdrive support routines

md_read       equ   $00000124
md_write      equ   $00000126
md_verin      equ   $00000128
md_sectr      equ   $0000012a

; ==============================================================
; System variables (QDOS)

sv_ident      equ   $00000000
sv_cheap      equ   $00000004
sv_chpfr      equ   $00000008
sv_free       equ   $0000000c
sv_basic      equ   $00000010
sv_trnsp      equ   $00000014
sv_trnfr      equ   $00000018
sv_respr      equ   $0000001c
sv_ramt       equ   $00000020
sv_rand       equ   $0000002e
sv_pollm      equ   $00000030
sv_tvmod      equ   $00000032
sv_scrst      equ   $00000033
sv_mcsta      equ   $00000034
sv_pcint      equ   $00000035
sv_netnr      equ   $00000037
sv_i2lst      equ   $00000038
sv_plist      equ   $0000003c
sv_shlst      equ   $00000040
sv_drlst      equ   $00000044
sv_ddlst      equ   $00000048
sv_keyq       equ   $0000004c
sv_trapv      equ   $00000050
sv_btpnt      equ   $00000054
sv_btbas      equ   $00000058
sv_bttop      equ   $0000005c
sv_jbtag      equ   $00000060
sv_jbmax      equ   $00000062
sv_jbpnt      equ   $00000064
sv_jbbas      equ   $00000068
sv_jbtop      equ   $0000006c
sv_chtag      equ   $00000070
sv_chmax      equ   $00000072
sv_chpnt      equ   $00000074
sv_chbas      equ   $00000078
sv_chtop      equ   $0000007c
sv_caps       equ   $00000088
sv_arbuf      equ   $0000008a
sv_ardel      equ   $0000008c
sv_arfrq      equ   $0000008e
sv_arcnt      equ   $00000090
sv_cqch       equ   $00000092
sv_wp         equ   $00000094
sv_sound      equ   $00000096
sv_ser1c      equ   $00000098
sv_ser2c      equ   $0000009c
sv_tmode      equ   $000000a0
sv_csub       equ   $000000a2
sv_timo       equ   $000000a6
sv_timov      equ   $000000a8
sv_fstat      equ   $000000aa
sv_prog       equ   $000000ac
sv_data       equ   $000000b0
sv_dest       equ   $000000b4
sv_thingl     equ   $000000b8
sv_mdrun      equ   $000000ee
sv_mdcnt      equ   $000000ef
sv_mddid      equ   $000000f0
sv_mdsta      equ   $000000f8
sv_fsdef      equ   $00000100
sv_fslst      equ   $00000140
sv_stacb      equ   $00000180
sv_stact      equ   $00000480
sv_trapo      equ   $00000054
sv_lxint      equ   $00000000
sv_axint      equ   $00000004
sv_lpoll      equ   $00000008
sv_apoll      equ   $0000000c
sv_lschd      equ   $00000010
sv_aschd      equ   $00000014
sv_lio        equ   $00000018
sv_aio        equ   $0000001c
sv_aopen      equ   $00000020
sv_aclos      equ   $00000024

; ==============================================================
; System variables (SMS2)

; ----------------------------------------------
; Machine identification

sys_idnt equ  $0000  ; long  system variables identifier
sysid_ql equ  $d2540000  ; QL (QDOS) system variable identifier
sysid_at equ  'S2AT'     ; SMS Atari system variable identifier
sysid_sq equ  'SMSQ'     ; SMSQ identifier

; ----------------------------------------------
; RAM allocation table

sys_chpb equ  $0004  ; long  Common HeaP Base
sys_chpf equ  $0008  ; long  Common HeaP Free space pointer
sys_fsbb equ  $000c  ; long  Filing system Slave Block area Base
sys_sbab equ  $0010  ; long  'QL SuperBASIC' Area Base
sys_tpab equ  $0014  ; long  Transient Program Area Base
sys_tpaf equ  $0018  ; long  Transient Program Area Free space pointer
sys_rpab equ  $001c  ; long  Resident Procedure Area Base
sys_ramt equ  $0020  ; long  user RAM Top
sys_mxfr equ  $0024  ; long  Maximum return from free memory call

sys_rtc  equ  $0028  ; long  real time (seconds)
sys_rtcf equ  $002c  ; word  real time fractional, count down

; ----------------------------------------------
; Odd working variables

sys_rand equ  $002e  ; word  RANDom number
sys_pict equ  $0030  ; word  Polling Interupt CounT
sys_dtyp equ  $0032  ; byte  Display TYPe (0=normal, 1=TV 625, 2=TV 525)
sys_dfrz equ  $0033  ; byte  Display FRoZen (T or F)
sys_qlmr equ  $0034  ; byte  QL Master chip Register value
sysqm__8 equ    3      ; mode 8 bit
sys_qlir equ  $0035  ; byte  QL Interrupt Register value
sys_rshd equ  $0036  ; byte  true to reschedule
sys_nnnr equ  $0037  ; byte  Network Node NumbeR
; ----------------------------------------------
; Action routine and driver lists

sys_exil equ  $0038  ; long  EXternal Interrupt action List
sys_poll equ  $003c  ; long  POLled action List
sys_shdl equ  $0040  ; long  ScHeDuler loop action List
sys_iodl equ  $0044  ; long  IO Driver List
sys_fsdl equ  $0048  ; long  Filing System Driver List

sys_ckyq equ  $004c  ; long  Current Keyboard Queue

sys_ertb equ  $0050  ; long  Exception Redirection Table Base

; ----------------------------------------------
; Resource allocation

; Filing system slave blocks, 8 byte entries, first byte 0 = unavailable
;              1 = vacant

sys_sbrp equ  $0054  ; long  Slave Block Running Pointer
sys_sbtb equ  $0058  ; long  Slave Block Table Base
sys_sbtt equ  $005c  ; long  Slave Block Table Top

sys_jbtg equ  $0060  ; word  next JoB TaG
sys_jbtp equ  $0062  ; word  highest JoB in table (ToP one)
sys_jbpt equ  $0064  ; long  current JoB PoinTer
sys_jbtb equ  $0068  ; long  JoB Table Base
sys_jbtt equ  $006c  ; long  JoB Table Top

sys_chtg equ  $0070  ; word  next CHannel TaG
sys_chtp equ  $0072  ; word  highest CHannel in table (ToP one)
sys_chpt equ  $0074  ; long  last checked CHannel PoinTer
sys_chtb equ  $0078  ; long  CHannel Table Base
sys_chtt equ  $007c  ; long  CHannel Table Top
sys_frbl equ  $0080  ; long  FRee Block List (to be returned to common heap)
sys_tsdd equ  $0084  ; byte  Thor flag
sys_capr equ  $0084  ; long  Capslock routine address (if positive)

; ----------------------------------------------
; Fixed peripheral working area (QL)

sys_perw equ  $0088  ; to $00ac

sys_caps equ  $0088  ; word  CAPS lock
sys_lchr equ  $008a  ; word  Last CHaRacter
sys_rdel equ  $008c  ; word  Repeat DELay (20ms units)
sys__rdel equ     25
sys_rtim equ  $008e  ; word  Repeat TIMe (20ms units)
sys__rtim equ      2
sys_rcnt equ  $0090  ; word  Repeat CouNTer (decremented every 20ms)
sys_swtc equ  $0092  ; word  SWiTch queues Character
sys_hstt equ  $0094  ; byte  additional hardware status
sys_tmsv equ  $0095  ; byte  sys_tmod saved by MDV routines ****
sys_qlbp equ  $0096  ; byte  QL BeePing
sys_brk  equ  $0097  ; byte  set by keyboard break
sys_qls1r equ $0098  ; long  pointer to QL serial 1 receive buffer
sys_qls2r equ $009c  ; long  pointer to QL serial 2 receive buffer
sys_tmod equ  $00a0  ; byte  QL transmit mode
sys_ptyp equ  $00a1  ; byte  processor type $00 = 68000/8, $30 = 68030 etc.
sys_immu equ    $01       ; internal MMU
sys_851m equ    $02       ; 68851 MMU
sys_ifpu equ    $04       ; internal FPU
sys_88xf equ    $08       ; 68881 68882 FPU
sys_csub equ  $00a2  ; long  subroutine to jump to on capslock
sys_stmo equ  $00a6  ; byte  serial xmit timeout
sys_dmiu equ  $00a6  ; byte  Atari msb DMA in use, lsb kill SER2 xmit
sys_stiu equ  $00a6  ; byte  msb Sector transfer in use
sys_mtyp equ  $00a7  ; byte  Machine TYPe / display type
sys__mtyp equ    $1e       ; machine ID bits
sys_blit  equ    +1       ; Blitter fitted
sys_herm  equ    +1       ; Hermes fitted
sys_mst   equ   $00       ; ordinary ST
sys_mstr  equ   $02       ; Mega ST or ST with RTC
sys_msta  equ   $04       ; Stacy
sys_mste  equ   $06       ; ordinary STE
sys_mmste equ   $08       ; Mega STE
sys_mgold equ   $0a       ; Gold card
sys_msgld equ   $0c       ; SuperGOLD card
sys_mfal  equ   $10       ; Falcon
sys_mq40  equ   $11       ; Q40
sys_mtt   equ   $18       ; TT
sys_mqxl  equ   $1c       ; QXL
sys_mqpc  equ   $1e       ; QPC
sys_java  equ   $14       ; java
sys_mfut  equ  %00000000      ; Standard QL or Futura display
sys_mmon  equ  %00100000      ; Monochone monitor
sys_mext  equ  %01000000      ; Atari Extended 4 Emulator
sys_mvme  equ  %10000000      ; Atari QVME emulator
sys_mqlc  equ  %11000000      ; QL mode LCD
sys_mvga  equ  %11000000      ; VGA
sys_maur  equ  %10100000      ; Aurora

sys_polf equ  $00a8  ; word  polling frequency
sys__polf equ    50     ; ... assumed polling frequency
sys_cfst equ  $00aa  ; word  cursor flash status

; ----------------------------------------------
; Filing system defaults

sys_defo equ    $70    ; offset to make defaults<$80
sys_prgd equ  $00ac  ; long  pointer to PRoGram Default
sys_datd equ  $00b0  ; long  pointer to DATa Default
sys_dstd equ  $00b4  ; long  pointer to DeSTination Default

sys_thgl equ  $00b8  ; long  pointer to THinG List
sys_psf  equ  $00bc  ; long  Primary stack frame pointer (SMSQ)
sys_int2i equ $00c0  ; byte  interrupt 2 in service
sys_50i  equ  $00c1  ; byte  50 Hz in service
sys_plrq equ  $00c3  ; byte  poll requested (-ve for request)
sys_clnk equ  $00c4  ; long  pointer to console linkage
sys_castt equ $00c8  ; byte  0 cache on, +ve cache temp off, -ve off
sys_casup equ $00c9  ; byte  cache suppressd timer
sys__casup equ    26  ; byte  25 full ticks
sys_iopr  equ $00ca  ; word  IO priority
sys_cbas  equ $00cc  ; long  current basic (copy of sys_jbpt)

sys_fpu   equ $00d0  ; 16 bytes

sys_prtc  equ $00e0  ; byte set if real time clock protected
sys_pmem  equ $00e1  ; byte memory protection level
sys_slug  equ $00e2  ; word slug level
sys_klock equ $00e4  ; byte key lock
sys__shk  equ     0        ; suppress HOTKEY
sys__ssf  equ     1        ; suppress screen freeze
sys__ssq  equ     2        ; suppress switch queue
sys__sbk  equ     4        ; suppress BREAK
sys__ssr  equ     6        ; suppress keyboard soft reset
sys__shr  equ     7        ; suppress keyboard hard reset
sys_mtick equ $00e6   ; word mini tick counter
sys_klnk  equ $00e8   ; long pointer to keyboard linkage

; ----------------------------------------------
; Fixed filing system working area (QL)

sys_filw equ  $00ee  ; to $0100

; ----------------------------------------------
; Filing system tables

sys_fsdd equ  $0100  ; 16*long pointers to Filing System Drive Definitions
sys_fsdt equ  $0140    ; Filing System drive Definition table Top
sys_nfsd equ  $10    ; max Number of Filing System Drive definitions
sys_fsch equ  $0140  ; long  linked list of Filing System CHannel blocks

sys_xact equ  $0144  ; byte  set if XLATE active
sys_xtab equ  $0146  ; long  pointer to XLATE table
sys_erms equ  $014a  ; long  pointer to (QDOS) error message table
sys_mstab equ $014e  ; long  pointer to (SMSQ) message table
sys_taskm equ $0154  ; 4 long  used by taskmaster - conflicts with
sys_turbo equ $0160  ; long  used by turbo
sys_qsound equ  $0164  ; long  used by qsound

sys_ldmlst equ  $0168  ; long  language dependent module list
sys_lang equ  $016c  ; word  current language

sys_vers equ  $0170  ; long  version
sys_xdly equ  $017e  ; byte  suspend delay after executing another job (3.13)
sys_ouch equ  $017f  ; byte  ouch flag (currently used to activate SGC debug)
sys_top  equ  $0180    ; TOP of system vars - bottom of Supervisor Stack

; ==============================================================
; Channel definition block

ch_len        equ   $00000000
ch_drivr      equ   $00000004
ch_owner      equ   $00000008
ch_rflag      equ   $0000000c
ch_tag        equ   $00000010
ch_stat       equ   $00000012
ch_actn       equ   $00000013
ch_jobwt      equ   $00000014
ch_qin        equ   $00000018
ch_qout       equ   $0000001c

; ==============================================================
; File system channel definition block

fs_next       equ   $00000018
fs_acces      equ   $0000001c
fs_drive      equ   $0000001d
fs_filnr      equ   $0000001e
fs_nblok      equ   $00000020
fs_nbyte      equ   $00000022
fs_eblok      equ   $00000024
fs_ebyte      equ   $00000026
fs_cblok      equ   $00000028
fs_updt       equ   $0000002c
fs_fname      equ   $00000032
fs_spare      equ   $00000058
fs_end        equ   $000000a0

; ==============================================================
; Physical definition block

fs_drivr      equ   $00000010
fs_drivn      equ   $00000014
fs_mname      equ   $00000016
fs_files      equ   $00000022

; ==============================================================
; Job control block

jb_len        equ   $00000000
jb_start      equ   $00000004
jb_owner      equ   $00000008
jb_hold       equ   $0000000c
jb_tag        equ   $00000010
jb_prior      equ   $00000012
jb_princ      equ   $00000013
jb_stat       equ   $00000014
jb_rela6      equ   $00000016
jb_wflag      equ   $00000017
jb_wjob       equ   $00000018
jb_trapv      equ   $0000001c
jb_d0         equ   $00000020
jb_d1         equ   $00000024
jb_d2         equ   $00000028
jb_d3         equ   $0000002c
jb_d4         equ   $00000030
jb_d5         equ   $00000034
jb_d6         equ   $00000038
jb_d7         equ   $0000003c
jb_a0         equ   $00000040
jb_a1         equ   $00000044
jb_a2         equ   $00000048
jb_a3         equ   $0000004c
jb_a4         equ   $00000050
jb_a5         equ   $00000054
jb_a6         equ   $00000058
jb_a7         equ   $0000005c
jb_sr         equ   $00000060
jb_pc         equ   $00000062
jb_end        equ   $00000068

; ==============================================================
; Window block definition

sd_xmin       equ   $00000018
sd_ymin       equ   $0000001a
sd_xsize      equ   $0000001c
sd_ysize      equ   $0000001e
sd_borwd      equ   $00000020
sd_xpos       equ   $00000022
sd_ypos       equ   $00000024
sd_xinc       equ   $00000026
sd_yinc       equ   $00000028
sd_scrb       equ   $00000032
sd_pmask      equ   $00000036
sd_smask      equ   $0000003a
sd_imask      equ   $0000003e
sd_cattr      equ   $00000042
sd_curf       equ   $00000043
sd_pcolr      equ   $00000044
sd_scolr      equ   $00000045
sd_icolr      equ   $00000046
sd_bcolr      equ   $00000047
sd_nlsta      equ   $00000048
sd_fmod       equ   $00000049
sd_yorg       equ   $0000004a
sd_xorg       equ   $00000050
sd_scal       equ   $00000056
sd_fbuf       equ   $0000005c
sd_fuse       equ   $00000060
sd_kbd        equ   $00000064
sd_end        equ   $00000068

; ==============================================================
; XXX TMP -- from the SMSQ/E sources

ut_chan1 equ 1

; ==============================================================
; XXX TMP -- from labels_qdos_io_asm

; Pointer I/O trap keys
iop_slnk equ  $6f   ; Set bytes in LINKage block

; timeout keys
no_wait  equ  0
forever  equ  -1

; ==============================================================
; XXX TMP -- from SMSQ/E's <keys/con>

; Format of pointer device driver definition block

pt_scren equ  $e8    ; ; long  address of visible SCREeN
pt_scrsz equ  $ec    ; ; long  SCReen SiZe in bytes
pt_scinc equ  $f0    ; ; word  SCreen row INCrement
pt_xscrs equ  $f2    ; ; word  X SCReen Size in pixels
pt_yscrs equ  $f4    ; ; word  Y SCReen Size in pixels

pt_xtotl equ  $f6    ; ; word  X total pixels
pt_xvref equ  $f8    ; ; word  X visible reference for xtotl
pt_ytotl equ  $fa    ; ; word  Y total pixels
pt_yvref equ  $fc    ; ; word  Y visible reference for ytotl
pt_frate equ  $fe    ; ; word  frame rate

pt_bgstp equ  $102   ; ; word  background stipple
pt_bgclm equ  $104   ; ; long  background colour mask
pt_sfnt1 equ  $108   ; ; long  pointer to Standard FoNT 1
pt_sfnt2 equ  $10c   ; ; long  pointer to Standard FoNT 2

; Channel definition block

sd_linel equ  $64  ; word   line length in bytes

