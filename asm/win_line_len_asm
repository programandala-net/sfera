; win_line_len_asm

; This file is part of Sfera, a library for SuperForth
; http://programandala.net/en.program.sfera.html

; Author: Marcos Cruz (programandala.net), 2016.
;
; Credit: Based on code from Display Extensions V2.01 (last
; update 2003-02-21), written by Dilwyn Jones,
; <http://dilwyn.me.uk>.

; XXX UNDER DEVELOPMENT

; Last update: 201601151822

; ==============================================================
; License

; You may do whatever you want with this work, so long as you
; retain all the copyright/authorship/acknowledgment/credit
; notice(s) and this license in all redistributed copies and
; derived works.  There is no warranty.

; ==============================================================
; Description

; `win-line-len` returns number of bytes per line for given
; window channel.

; ==============================================================
; History

; 2016-01-14: Start.
; 2016-01-15: Added more detailed credits.

; ==============================================================

  include 'inc_macros_asm'
  include 'inc_labels_asm'

  code 'WIN-LINE-LEN',win_line_len_end  ; ( d -- n )

  ; d = window channel ID
  ; n = bytes per line

  move.l a0,-(sp)         ; save SuperForth's a0
  move.l a2,-(sp)         ; save SuperForth's a2
  pop_l d6                ; d6=channel ID
  move.w d2,-(sp)         ; save SuperForth's TOS

  moveq   #mt_inf,d0      ; call mt.inf to get system information
  trap    #1              ; call mt.inf
  move.l  d6,a0           ; a0=channel ID

  ; d2.l = ASCII version number (n.nn)
  ;
  ; remove the decimal point to make things easier as some
  ; national ROM versions contain a letter code rather than "."

  move.l  #128,d0         ; default value for AH/JM ROMs
  and.l   #$FF00FFFF,d2   ; remove '.'
  cmpi.l  #$31003034,d2   ; >=1.04? <"1"><nul><"0"><"4">
  bcs     done            ; no, return 128

  ; prepare to fetch info from definition block

  moveq   #sd_extop,d0    ; prepare to use the channel
  moveq   #sd_linel,d1    ; offset in chan def block for sd.linel
  moveq   #forever,d3     ; infinite timeout
  lea.l   extop_w,a2      ; the routine to be called by sd.extop
  trap    #3              ; invoke sd.extop
  ; d1 = bytes per line

  ; XXX FIXME -- it always return 100!

done

  move.w (sp)+,d2         ; restore SuperForth's TOS
  push_w d1
  move.l (sp)+,a2         ; restore SuperForth's a2
  move.l (sp)+,a0         ; restore SuperForth's a0
  next

  ; this routine is invoked from sd_extop to fetch a value
  ; indexed by d1 from the base of the definition block in a0

extop_w
  move.w    0(a0,d1.w),d1   ;fetch word value required
  moveq     #0,d0           ;ensure no error
  rts

win_line_len_end equ *

  end_code_definitions

  end

