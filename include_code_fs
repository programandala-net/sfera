\ include_code_fs

\ This file is part of Sfera, a library for SuperForth
\ http://programandala.net/en.program.sfera.html

\ Author: Marcos Cruz (programandala.net), 2016.
\
\ Code based on the SuperForth word `load_file`, written by
\ Gerry Jackson, 1985.

\ ==============================================================
\ License

\ You may do whatever you want with this work, so long as you
\ retain all the copyright/authorship/acknowledgment/credit
\ notice(s) and this license in all redistributed copies and
\ derived works.  There is no warranty.

\ ==============================================================
\ History

\ 2016-01-09: Code copied from SuperForth 2.0. Layout changes.
\ Renamed words. Did some changes after Sfera.
\
\ 2016-01-14: Simplified: no `#bin` to store the channel and
\ close it at the end; `#in` can be used directly.

\ ==============================================================

2variable #old-in

: read-number  ( -- n )  key 256 * key + ;
  \ Read a 16-bit number from the current input channel.

: read-code-definitions  ( -- )
  begin  read-number  h# 4AFB =  while
    key tib over expect  \ get the name field
    span @ #tib !
    1 and 0= if  key drop  then  \ lose padding if even
    >in off  create-code
    read-number 0 do  key c,  loop  \ compile the code
  repeat  ;
  \ Read code definitions from the input channel.

: (included-code)  ( -- )
  \ #in 2@ #old-in 2!  \ save the input stream \ XXX OLD
  #in 2@ 2>r  \ save the input stream
  0 filename open_device #in 2!
  read-code-definitions
  #in 2@ close
  \ #old-in 2@ #in 2!  ;  \ restore the input stream \ XXX OLD
  2r> #in 2!  ;  \ restore the input stream
  \ Include the binary file generated by an assembler,
  \ whose filename is stored in `filename`.

: included-code  ( ca len -- )  ?filename>list  (included-code)  ;
  \ Include a binary file _ca len_ generated by an assembler.

: include-code  ( "name" -- )  parse-word included-code  ;
  \ Include a binary file "name" generated by an assembler.

: required-code  ( ca len -- )
  2dup included? if     2drop
                 else   filename>list (included-code)  then  ;
  \ Require a binary file _ca len_ generated by an assembler.

: require-code   ( "name" -- )  parse-word required-code  ;
  \ Require a binary file "name" generated by an assembler.

end-of-file

\ vim: filetype=superforthsfera
